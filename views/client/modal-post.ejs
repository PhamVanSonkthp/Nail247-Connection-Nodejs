<style>
    .imageuploadify-container>button {
        display: none;
    }

    #content_options_post {
        line-height: 2;
    }
</style>

<div id="modal_post_job" class="modal" tabindex="-1" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">

            <button style="position: absolute;right: 0.7rem;top: 0.3rem;" onclick="hideOptions()" type="button"
                class="close no-border" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true" class="no-border" style="font-size: 1.3rem;">&times;</span>
            </button>

            <form id="form_upload_job" enctype="multipart/form-data" method="post">
                <div class="p-5">
                    <div id="lbl_title_post" class="font-medium mt-3 text-center"
                        style="font-size: 1.3rem; color: #eb1b6c;">
                    </div>

                    <div class="font-medium mt-3" style="font-size: 1.3rem;">Upload images</div>

                    <div>
                        <input autocomplete="off" type="file" name="avatar" id="inputSelectMoreImage" accept="image/*"
                            onchange="onChangeImage()" multiple>
                    </div>

                    <div id="lbl_name_salon" class="font-medium mt-3" style="font-size: 1.3rem;"></div>

                    <div class="relative text-gray-700 dark:text-gray-300 box mt-3"
                        style="box-shadow: 0px 4px 6px #bdbdbd;">
                        <input id="modal_post_job_edt_name_salon" name="name_salon" autocomplete="off" type="text"
                            maxlength="10000"
                            class="p-3 h-full form-control pl-5 w-full box pr-10 placeholder-theme-13 no-border"
                            placeholder="">
                    </div>

                    <div class="font-medium mt-3" style="font-size: 1.3rem;">Title</div>

                    <div class="relative text-gray-700 dark:text-gray-300 box mt-3"
                        style="box-shadow: 0px 4px 6px #bdbdbd;">
                        <input id="modal_post_job_edt_title" autocomplete="off" type="text" name="title"
                            maxlength="10000"
                            class="p-3 h-full form-control pl-5 w-full box pr-10 placeholder-theme-13 no-border"
                            placeholder="* Title">
                    </div>

                    <div class="font-medium mt-3" style="font-size: 1.3rem;">Content</div>

                    <div class="relative text-gray-700 dark:text-gray-300 box mt-3"
                        style="box-shadow: 0px 4px 6px #bdbdbd;height: 10rem;">
                        <textarea id="editor" autocomplete="off" type="text" maxlength="10000"
                            class="p-3 h-full form-control pl-5 w-full box pr-10 placeholder-theme-13 no-border"
                            placeholder="Content"></textarea>
                    </div>

                    <div class="font-medium mt-3" style="font-size: 1.3rem;">Details</div>

                    <div class="grid grid-cols-12 gap-6 mt-3">
                        <div class="col-span-12 xl:col-span-6" style="box-shadow: 0px 4px 6px #bdbdbd;">
                            <div class="relative text-gray-700 dark:text-gray-300 box">
                                <input id="modal_post_job_edt_phone" autocomplete="off" type="text" name="phone"
                                    class="p-3 h-full form-control pl-5 w-full box pr-10 placeholder-theme-13 no-border"
                                    placeholder="* Phone contact"
                                    onkeypress="return event.charCode >= 48 && event.charCode <= 57"
                                    onpaste="return false">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="#eb1b6c" stroke-width="1.5" stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="feather feather-search w-4 h-4 absolute my-auto inset-y-0 mr-3 right-0">
                                    <path
                                        d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z">
                                    </path>
                                </svg>
                            </div>
                        </div>

                        <div class="col-span-12 xl:col-span-6" style="box-shadow: 0px 4px 6px #bdbdbd;">
                            <div class="relative text-gray-700 dark:text-gray-300 box">
                                <input id="modal_post_job_edt_email" autocomplete="off" type="text" name="email"
                                    maxlength="200"
                                    class="p-3 h-full form-control pl-5 w-full box pr-10 placeholder-theme-13 no-border"
                                    placeholder="* Email contact">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="#eb1b6c" stroke-width="1.5" stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="feather feather-search w-4 h-4 absolute my-auto inset-y-0 mr-3 right-0">
                                    <path
                                        d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z">
                                    </path>
                                    <polyline points="22,6 12,13 2,6"></polyline>
                                </svg>
                            </div>
                        </div>

                    </div>

                    <input name="code" id="edt_code" style="display: none;" />
                    <input name="city" id="edt_city" style="display: none;" />
                    <input name="state" id="edt_state" style="display: none;" />
                    <input name="months_provider" id="edt_months_provider" style="display: none;" />
                    <input name="package" id="edt_package" style="display: none;" />
                    <input name="id_agency" id="edt_id_agency" style="display: none;" />
                    <input name="cost_package" id="edt_cost_package" style="display: none;" />
                    <input name="content" id="edt_content" style="display: none;" />
                    <input name="location" id="edt_location" style="display: none;" />

                    <div class="grid grid-cols-12 gap-6 mt-3">
                        <div class="col-span-12 xl:col-span-6" style="box-shadow: 0px 4px 6px #bdbdbd;">
                            <div class="relative text-gray-700 dark:text-gray-300 box">
                                <input id="modal_post_job_edt_salary" autocomplete="off" type="text" name="cost"
                                    maxlength="10"
                                    class="p-3 h-full form-control pl-5 w-full box pr-10 placeholder-theme-13 no-border number"
                                    onkeypress="return event.charCode >= 48 && event.charCode <= 57"
                                    onpaste="return false">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="#eb1b6c" stroke-width="1.5" stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="feather feather-search w-4 h-4 absolute my-auto inset-y-0 mr-3 right-0">
                                    <line x1="12" y1="1" x2="12" y2="23"></line>
                                    <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
                                </svg>
                            </div>
                        </div>

                        <div class="col-span-12 xl:col-span-6" style="box-shadow: 0px 4px 6px #bdbdbd;">
                            <div class="relative text-gray-700 dark:text-gray-300 box">
                                <input id="modal_post_job_edt_filter_country" autocomplete="off" type="text"
                                    maxlength="10000"
                                    class="p-3 h-full form-control pl-5 w-full box pr-10 placeholder-theme-13 no-border"
                                    placeholder="* City or Zipcode of your salon" oninput="onFilterCountryPostJob()">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="#eb1b6c" stroke-width="1.5" stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="feather feather-search w-4 h-4 absolute my-auto inset-y-0 mr-3 right-0">
                                    <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                                    <circle cx="12" cy="10" r="3"></circle>
                                </svg>

                                <div id="container_filter_country"
                                    style="position: absolute;background: white;left: 0;right: 0;padding: 1rem;display: none;z-index: 100;max-height: 210px;overflow-y: auto;">

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="font-medium mt-3" style="font-size: 1.3rem;display: none;">Location on map</div>

                    <div class="mt-2" style="height: 20rem;display: none;">
                        <div id="map"></div>
                    </div>

                    <div class="font-medium mt-3" style="font-size: 1.3rem;">Select option</div>

                    <div id="content_options_post" class="text-center p-3 font-medium">

                    </div>

                    <div class="grid grid-cols-12 gap-6 mt-3">
                        <div class="col-span-12 xl:col-span-4" style="box-shadow: 0px 4px 6px #bdbdbd;">
                            <div class="font-medium">Package</div>
                            <select id="select_package_post_job" class="form-select p-3 no-border"
                                aria-label="Default select example">

                            </select>
                        </div>

                        <div class="col-span-12 xl:col-span-4" style="box-shadow: 0px 4px 6px #bdbdbd;">
                            <div class="font-medium">Price</div>
                            <select id="select_price_post_job" class="form-select p-3 no-border"
                                aria-label="Default select example">
                            </select>
                        </div>

                        <div class="col-span-12 xl:col-span-4" style="box-shadow: 0px 4px 6px #bdbdbd;">
                            <div class="font-medium">Content</div>
                            <div class="p-3" id="content_post_job"></div>
                        </div>

                    </div>

                    <button type="button" onclick="uploadPostJob()" style="background-color: #6bab44;"
                        class="btn text-white w-full mt-5" aria-expanded="false"><i
                            class="fas fa-cloud-upload-alt mr-2"></i><span id="btn_post_job"></span></button>

                </div>
            </form>
        </div>
    </div>
</div>

<script src="../views/client/dist/js/ckeditor/ckeditor.js"></script>
<script src="../views/client/dist/js/ckeditor/samples/js/sample.js"></script>

<!-- <script async
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCJtXzl0cHyIitaEJ5lOTYoLsosPIft7JY&callback=initMap&libraries=&v=weekly"></script> -->


<!-- <script>
    let map;
    let markers = [];
    var posPostJob;

    function canvasMap(position) {
        map = new google.maps.Map(document.getElementById("map"), {
            center: position,
            zoom: 5,
        });
        const locationButton = document.createElement("button");
        locationButton.type = 'button';
        locationButton.textContent = "Take my location";
        locationButton.classList.add("custom-map-control-button");

        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
        addMarker(position)
        posPostJob = JSON.stringify(position)
        locationButton.addEventListener("click", () => {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };
                        map.setCenter(pos);
                        addMarker(pos);
                    },
                    () => {
                        //handleLocationError(true, infoWindow, map.getCenter());
                    }
                );
            } else {
                //handleLocationError(false, infoWindow, map.getCenter());
            }
        });
        map.addListener("click", (event) => {
            posPostJob = JSON.stringify(event.latLng.toJSON(), null, 2)
            addMarker(event.latLng);
        });

    }

    function canvasMapUpdate(position) {
        map = new google.maps.Map(document.getElementById("map_update"), {
            center: position,
            zoom: 5,
        });
        const locationButton = document.createElement("button");
        locationButton.type = 'button';
        locationButton.textContent = "Take my location";
        locationButton.classList.add("custom-map-control-button");

        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
        addMarker(position)
        posPostJob = JSON.stringify(position)
        locationButton.addEventListener("click", () => {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };
                        map.setCenter(pos);
                        addMarker(pos);
                    },
                    () => {
                        //handleLocationError(true, infoWindow, map.getCenter());
                    }
                );
            } else {
                //handleLocationError(false, infoWindow, map.getCenter());
            }
        });
        map.addListener("click", (event) => {
            posPostJob = JSON.stringify(event.latLng.toJSON(), null, 2)
            addMarker(event.latLng);
        });

    }

    function addMarker(position) {
        deleteMarkers();
        const marker = new google.maps.Marker({
            position,
            map,
        });
        markers.push(marker);
    }

    function setMapOnAll(map) {
        for (let i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }
    function deleteMarkers() {
        setMapOnAll(null);
        markers = [];
    }

</script> -->

<script>
    var stripeHandlerPostJob
    var is_repost = false
    var id_post

    socket.emit('payments-stripes', { _id: getCookie('_id'), password: getCookie('password') }, (response) => {
        if (isDefine(response)) {
            stripeHandlerPostJob = StripeCheckout.configure({
                key: response,
                locale: 'en',
                token: function (token) {
                    showLoading()
                    if (is_repost) {
                        toggleModalRePost()
                    } else {
                        toggleModalPostJob()
                    }

                    fetch('/purchase', {
                        method: 'POST',
                        headers: {
                            token: 'infinifyltd',
                            stripe: JSON.stringify({
                                stripeTokenId: token.id,
                                amount: costPostJob * 100,
                                type_post: type_post,
                                is_repost: is_repost,
                                id_post: id_post,
                                months_provider_post_job: months_provider_post_job,
                                package_post_job: package_post_job,
                                cost_post_job: cost_post_job,
                                id_agency: id_agency,
                            }),
                        },
                        body: formData
                    }).then(function (res) {
                        if (res.status == 200) {
                            window.location.href = '../agency/posts?sort=' + (type_post + 1)
                        } else {
                            alert('error')
                            hideLoading()
                            toggleModalPostJob()
                        }
                    }).catch(function (data) {
                        alert(data.message)
                        hideLoading()
                    })
                }
            })
        }
    })
</script>

<script>
    var type_post
    var codePostJob
    var months_provider_post_job, package_post_job, cost_post_job, id_agency
    var optionsPostJob, indexPostJob = 0, packagePostJob, monthsProviderPostJob, costPostJob
    var titlePostJob, salonNamePostJob, contentPostJob, phonePostJob, salaryPostJob, emailPostJob, countryPostJob
    var formData

    const urlParams = new URLSearchParams(window.location.search)

    function uploadPostJob() {
        $('.removed').remove()

        if ($("#inputSelectMoreImage")[0].files.length > 10) {
            $('.imageuploadify-container').remove()
            $('#inputSelectMoreImage').focus()
            alert("You can select only 10 images")
            return
        }

        if (!checkFileBig()) {
            $('#inputSelectMoreImage').focus()
            return
        }
        if (isEmptyFile()) {
            $('#inputSelectMoreImage').focus()
            alert('Please select at least one photo')
            return
        }


        if (!$('#modal_post_job_edt_title').val().length) {
            $('#modal_post_job_edt_title').focus()
            $('#modal_post_job_edt_title').before('<p class="removed" style="color:red">Title is require</p>')
            return
        }
        if (!CKEDITOR.instances.editor.getData().length) {
            $('#editor').focus()
            $('#editor').before('<p class="removed" style="color:red">Content is require</p>')
            return
        }

        if (getOnlyNumber($('#modal_post_job_edt_phone').val()).length < 10) {
            $('#modal_post_job_edt_phone').focus()
            $('#modal_post_job_edt_phone').before('<p class="removed" style="color:red">Phone is require</p>')
            return
        }
        if (!validateEmail($('#modal_post_job_edt_email').val())) {
            $('#modal_post_job_edt_email').focus()
            $('#modal_post_job_edt_email').before('<p class="removed" style="color:red">Please enter correct email</p>')
            return
        }

        if (!$('#edt_city').val().length || !codePostJob) {
            $('#modal_post_job_edt_filter_country').focus()
            $('#modal_post_job_edt_filter_country').before('<p class="removed" style="color:red">City is require</p>')
            return
        }



        titlePostJob = ($('#modal_post_job_edt_title').val())
        salonNamePostJob = ($('#modal_post_job_edt_name_salon').val())
        contentPostJob = CKEDITOR.instances.editor.getData()
        phonePostJob = ($('#modal_post_job_edt_phone').val())
        salaryPostJob = ($('#modal_post_job_edt_salary').val())
        emailPostJob = ($('#modal_post_job_edt_email').val())
        countryPostJob = ($('#modal_post_job_edt_filter_country').val())

        // try {
        //     posPostJob = JSON.parse(JSON.stringify(pos.toJSON(), null, 2))
        // } catch (e) {

        // }

        $('#edt_code').val(codePostJob)
        $('#edt_months_provider').val(monthsProviderPostJob)
        $('#edt_package').val(packagePostJob)
        $('#edt_id_agency').val(getCookie('_id'))
        $('#edt_cost_package').val(costPostJob)
        $('#edt_content').val(contentPostJob)
        //$('#edt_location').val(posPostJob)

        $('#form_upload_job').unbind();

        $('#form_upload_job').on('submit', (function (e) {
            e.preventDefault()
            formData = new FormData(this)

            if (costPostJob == 0) {
                showLoading()
                toggleModalPostJob()
                let actionUpdatePost
                if (type_post == 0) {
                    actionUpdatePost = '../job/form-web/?_id=' + getCookie('_id') + '&password=' + getCookie('password')
                } else if (type_post == 1) {
                    actionUpdatePost = '../sell-salon/form-web/?_id=' + getCookie('_id') + '&password=' + getCookie('password')
                } else if (type_post == 2) {
                    actionUpdatePost = '../nail-supplies/form-web/?_id=' + getCookie('_id') + '&password=' + getCookie('password')
                }

                $.ajax({
                    type: 'POST',
                    url: actionUpdatePost,
                    headers: {
                        token: 'infinifyltd'
                    },
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        window.location.href = '../agency/posts?sort=' + (type_post + 1)
                    },
                    error: function (data) {
                        alert('error')
                        toggleModalPostJob()
                        hideLoading()
                    }
                })

            } else {
                checkoutPostJob()
            }
        }))

        $('#form_upload_job').submit()
    }

    function checkoutPostJob(isRepost, idPost, typePost, monthsProviderPostJob, packagePostJob, _costPostJob, idAgency) {
        if (isRepost) {
            is_repost = isRepost
            id_post = idPost
            type_post = typePost
            months_provider_post_job = monthsProviderPostJob
            package_post_job = packagePostJob
            cost_post_job = _costPostJob
            id_agency = idAgency

        }

        stripeHandlerPostJob.open({
            amount: costPostJob * 100
        })
    }

    $('#select_package_post_job').on('change', function () {
        let i = tryParseInt(this.value)
        $('#content_options_post').html(optionsPostJob[i].content)
        packagePostJob = optionsPostJob[i].name
        indexPostJob = i
        $("#select_price_post_job").empty()
        for (let j = 0; j < optionsPostJob[i].options.length; j++) {
            let p = new Option('$' + optionsPostJob[i].options[j].cost + ' / ' + optionsPostJob[i].options[j].month + ' month', j)
            $(p).html('$' + optionsPostJob[i].options[j].cost + ' / ' + optionsPostJob[i].options[j].month + ' month')
            $("#select_price_post_job").append(p)
        }
        $("#content_post_job").html(optionsPostJob[indexPostJob].options[0].content)
        monthsProviderPostJob = optionsPostJob[indexPostJob].options[0].month
        costPostJob = optionsPostJob[indexPostJob].options[0].cost
        if (costPostJob == 0) {
            $('#btn_post_job').html('Post For Free')
        } else {
            $('#btn_post_job').html('$' + formatMoney(costPostJob) + ' Check out')
        }
    })

    $('#select_price_post_job').on('change', function () {
        let i = tryParseInt(this.value)
        $("#content_post_job").html(optionsPostJob[indexPostJob].options[i].content)
        monthsProviderPostJob = optionsPostJob[indexPostJob].options[i].month
        costPostJob = optionsPostJob[indexPostJob].options[i].cost
        if (costPostJob == 0) {
            $('#btn_post_job').html('Post For Free')
        } else {
            $('#btn_post_job').html('$' + formatMoney(costPostJob) + ' Check out')
        }
    })

    function fillCountryPostJob(val) {
        $('#modal_post_job_edt_filter_country').val(val)
        $('#edt_city').val(val.split(',')[0])
        $('#edt_state').val(val.split(',')[1].trim().split(' ')[0])
        codePostJob = val.split(',')[1].trim().split(' ')[1]
        $('#container_filter_country').hide(200)
    }
    function onFilterCountryPostJob() {
        if ($('#modal_post_job_edt_filter_country').val().length) {
            $('#container_filter_country').show(200)

            socket.emit('search-country', { val: $('#modal_post_job_edt_filter_country').val() }, (response) => {
                $('#container_filter_country').empty()
                if (response && $('#modal_post_job_edt_filter_country').val().length) {
                    for (let i = 0; i < response.length; i++) {
                        $('#container_filter_country').append('<div onclick="fillCountryPostJob(\'' + escapeHtml(response[i][3]) + ', ' + escapeHtml(response[i][4]) + ' ' + escapeHtml(response[i][0]) + '\')" ><span class="font-medium">' + escapeHtml(response[i][3]) + ', ' + escapeHtml(response[i][4]) + '</span> <span class="ml-2" style="font-size: 0.8rem;">' + escapeHtml(response[i][0]) + '</span></div>')
                    }
                }
            })
        } else {
            $('#container_filter_country').hide(200)
        }
    }
</script>

<script>

    document.getElementById('modal_post_job_edt_phone').addEventListener('input', function (e) {
        var x = e.target.value.replace(/\D/g, '').match(/(\d{0,3})(\d{0,3})(\d{0,4})/);
        e.target.value = !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');
    })

    function onPost(val) {
        if (val == 2) {
            $('#lbl_name_salon').html('Company name')
            $('#modal_post_job_edt_name_salon').attr("placeholder", "Company name")
        } else {
            $('#lbl_name_salon').html('Name salon')
            $('#modal_post_job_edt_name_salon').attr("placeholder", "Name salon")
        }
        $('.dropdown-menu').hide()
        $("#select_package_post_job").empty()
        $("#select_price_post_job").empty()
        $("#content_post_job").empty()


        type_post = val

        if (type_post == 0) {
            $('#lbl_title_post').html('Post a Job')
            $('#modal_post_job_edt_salary').attr("placeholder", "Salary / week")
            socket.emit('options-posts-jobs-agency', { _id: getCookie('_id'), password: getCookie('password') }, (response) => {
                if (isDefine(response) && response.length > 0) {
                    $('#content_options_post').html(escapeHtml(response[0].content))
                    optionsPostJob = response
                    packagePostJob = response[0].name
                    for (let i = 0; i < response.length; i++) {
                        var o = new Option(response[i].name, i)
                        $(o).html(escapeHtml(response[i].name))
                        $("#select_package_post_job").append(o)

                        if (i == 0) {
                            for (let j = 0; j < response[i].options.length; j++) {
                                let p = new Option('$' + response[i].options[j].cost + ' / ' + response[i].options[j].month + ' month', j)
                                $(p).html('$' + response[i].options[j].cost + ' / ' + response[i].options[j].month + ' month')
                                $("#select_price_post_job").append(p)
                            }
                            $("#content_post_job").html(response[i].options[0].content)
                            monthsProviderPostJob = response[i].options[0].month
                            costPostJob = response[i].options[0].cost
                            if (costPostJob == 0) {
                                $('#btn_post_job').html('Post For Free')
                            } else {
                                $('#btn_post_job').html('$' + formatMoney(costPostJob) + ' Check out')
                            }
                        }
                    }
                }
            })
        } else if (type_post == 1) {
            $('#lbl_title_post').html('Post a Salon for Sale')
            $('#modal_post_job_edt_salary').attr("placeholder", "Price (option)")
            socket.emit('options-posts-sell-salon-agency', { _id: getCookie('_id'), password: getCookie('password') }, (response) => {
                if (isDefine(response) && response.length > 0) {
                    optionsPostJob = response
                    packagePostJob = response[0].name
                    $('#content_options_post').html(response[0].content)
                    for (let i = 0; i < response.length; i++) {
                        var o = new Option(response[i].name, i)
                        $(o).html(response[i].name)
                        $("#select_package_post_job").append(o)

                        if (i == 0) {
                            for (let j = 0; j < response[i].options.length; j++) {
                                let p = new Option('$' + response[i].options[j].cost + ' / ' + response[i].options[j].month + ' month', j)
                                $(p).html('$' + response[i].options[j].cost + ' / ' + response[i].options[j].month + ' month')
                                $("#select_price_post_job").append(p)
                            }
                            $("#content_post_job").html(response[i].options[0].content)
                            monthsProviderPostJob = response[i].options[0].month
                            costPostJob = response[i].options[0].cost
                            if (costPostJob == 0) {
                                $('#btn_post_job').html('Post For Free')
                            } else {
                                $('#btn_post_job').html('$' + formatMoney(costPostJob) + ' Check out')
                            }
                        }
                    }
                }
            })
        } else if (type_post == 2) {
            $('#lbl_title_post').html('Post a Nail Supply')
            $('#modal_post_job_edt_salary').attr("placeholder", "Price (option)")
            socket.emit('options-posts-nail-supply-agency', { _id: getCookie('_id'), password: getCookie('password') }, (response) => {
                if (isDefine(response) && response.length > 0) {
                    optionsPostJob = response
                    packagePostJob = response[0].name
                    $('#content_options_post').html(response[0].content)
                    for (let i = 0; i < response.length; i++) {
                        var o = new Option(response[i].name, i)
                        $(o).html(response[i].name)
                        $("#select_package_post_job").append(o)

                        if (i == 0) {
                            for (let j = 0; j < response[i].options.length; j++) {
                                let p = new Option('$' + response[i].options[j].cost + ' / ' + response[i].options[j].month + ' month', j)
                                $(p).html('$' + response[i].options[j].cost + ' / ' + response[i].options[j].month + ' month')
                                $("#select_price_post_job").append(p)
                            }
                            $("#content_post_job").html(response[i].options[0].content)
                            monthsProviderPostJob = response[i].options[0].month
                            costPostJob = response[i].options[0].cost
                            if (costPostJob == 0) {
                                $('#btn_post_job').html('Post For Free')
                            } else {
                                $('#btn_post_job').html('$' + formatMoney(costPostJob) + ' Check out')
                            }
                        }
                    }
                }
            })
        }
        toggleModalPostJob()
    }

    function toggleModalPostJob() {
        $('#modal_post_job').css('display', 'block');
        $('#modal_post_job').css('margin-top', '0px');
        $('#modal_post_job').css('margin-left', '0px');
        $('#modal_post_job').css('z-index', '1000');
        if ($("#modal_post_job").hasClass("show")) {
            $('#modal_post_job').removeClass('show');
            $('body').removeClass('overflow-y-hidden');
        } else {
            $('#modal_post_job').addClass('show');
            $('body').addClass('overflow-y-hidden');
        }
        //canvasMap({ lat: 40.906659, lng: -101.361232 })
    }

    function logout() {
        deleteAllCookies()
        window.location.replace('../')
    }

    function checkLogin() {
        if (getCookie('_id') && getCookie('password')) {
            socket.emit('recent-login-agency', { _id: getCookie('_id'), password: getCookie('password') }, (response) => {
                if (!response) {
                    logout()
                }
            })
        } else {
            logout()
        }
    }

    function hideOptions() {
        $('.dropdown-menu').show()
    }

    checkLogin()

    function onChangeImage() {
        $('.imageuploadify-container').remove()
        checkFileBig()
    }

    function checkFileBig() {
        let files = $('#inputSelectMoreImage').prop('files')

        for (let x in files) {
            let filesize = ((files[x].size / 1024) / 1024).toFixed(4);
            if (filesize > 10) {
                alert('Photo size too big, please reduce photo below 10mb')
                $('.imageuploadify-container').remove()
                return false
            }
        }

        return true
    }

    function isEmptyFile() {
        return $('#inputSelectMoreImage').prop('files').length == 0
    }

    function deleteAllCookies() {
        document.cookie.split(";").forEach(function (c) { document.cookie = c.replace(/^ +/, "").replace(/=.*/, "=;expires=" + new Date().toUTCString() + ";path=/"); });
    }

    initSample()
</script>

<script src="../views/admin/dist/js/jquery.masknumber.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.number').maskNumber({ integer: true })
    })
</script>